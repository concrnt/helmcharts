apiVersion: v1
kind: ConfigMap
metadata:
  name: concrnt-config
data:
  config.yaml: |-
    server:
      dsn: {{ .Values.server.dsn }}
      redisAddr: {{ .Values.server.redisAddr }}
      memcachedAddr: {{ .Values.server.memcachedAddr }}
      traceEndpoint: "grafana-agent:4318"
      enableTrace: {{ .Values.monitoring.traces.enabled }}
      repositoryPath: "/var/lib/concrnt"
      captchaSitekey: {{ .Values.server.captchaSitekey }}
      captchaSecret: {{ .Values.server.captchaSecret }}
      vapidPublicKey: {{ .Values.server.vapidPublicKey | quote }}
      vapidPrivateKey: {{ .Values.server.vapidPrivateKey | quote }}

    concrnt:
      fqdn: {{ .Values.concrnt.fqdn }}
      registration: {{ .Values.concrnt.registration }}
      privatekey: {{ .Values.concrnt.privatekey }}
      dimension: {{ .Values.concrnt.dimension }}

    profile:
      nickname: {{ .Values.profile.nickname }}
      description: {{ .Values.profile.description }}
      logo: {{ .Values.profile.logo }}
      wordmark: {{ .Values.profile.wordmark }}
      themeColor: {{ .Values.profile.themeColor | quote }}
      maintainerName: {{ .Values.profile.maintainerName }}
      maintainerEmail: {{ .Values.profile.maintainerEmail }}

  gateway.yaml: |-
    services:
      - name: net.concrnt.webui
        host: ccwebui
        port: 80
        path: /web
        preservePath: true
      - name: net.concrnt.api
        host: ccapi
        port: 8000
        path: /api/v1
        injectCors: true
        rateLimit:
          'GET:/api/v1/domain':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/domain/:id':
            bucketSize: 10
            refillSpan: 1
          'GET:/api/v1/domains':
            bucketSize: 10
            refillSpan: 1

          'GET:/api/v1/entity/:id':
            bucketSize: 1000
            refillSpan: 1
          'GET:/api/v1/entity/:id/acking':
            bucketSize: 10
            refillSpan: 1
          'GET:/api/v1/entity/:id/acker':
            bucketSize: 10
            refillSpan: 1
          'GET:/api/v1/entity/:id/entities':
            bucketSize: 10
            refillSpan: 1

          'GET:/api/v1/message/:id':
            bucketSize: 1000
            refillSpan: 1
          'GET:/api/v1/message/:id/associations':
            bucketSize: 1000
            refillSpan: 1
          'GET:/api/v1/message/:id/associationcounts':
            bucketSize: 1000
            refillSpan: 1
          'GET:/api/v1/message/:id/associations/mine':
            bucketSize: 1000
            refillSpan: 1

          'GET:/api/v1/association/:id':
            bucketSize: 1000
            refillSpan: 1

          'GET:/api/v1/profile/:id':
            bucketSize: 1000
            refillSpan: 1
          'GET:/api/v1/profile/:owner/:semanticid':
            bucketSize: 1000
            refillSpan: 1
          'GET:/api/v1/profiles':
            bucketSize: 10
            refillSpan: 1
          'GET:/api/v1/profile/:id/associations':
            bucketSize: 100
            refillSpan: 1

          'GET:/api/v1/timeline/:id':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timeline/:id/query':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timeline/:id/associations':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timelines':
            bucketSize: 10
            refillSpan: 1
          'GET:/api/v1/timelines/mine':
            bucketSize: 10
            refillSpan: 1
          'GET:/api/v1/timelines/recent':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timelines/range':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timelines/chunks':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timelines/retracted':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/timelines/realtime':
            bucketSize: 10
            refillSpan: 1

          'GET:/api/v1/chunks/itr':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/chunks/body':
            bucketSize: 100
            refillSpan: 1

          'GET:/api/v1/kv/:key':
            bucketSize: 100
            refillSpan: 1
          'PUT:/api/v1/kv/:key':
            bucketSize: 100
            refillSpan: 1

          'GET:/api/v1/auth/passport':
            bucketSize: 30
            refillSpan: 1

          'GET:/api/v1/key/:id':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/keys/mine':
            bucketSize: 10
            refillSpan: 1

          'GET:/api/v1/subscription/:id':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/subscription/:id/associations':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/subscriptions/mine':
            bucketSize: 10
            refillSpan: 1

          'GET:/api/v1/repository':
            bucketSize: 100
            refillSpan: 1
          'POST:/api/v1/repository':
            bucketSize: 100
            refillSpan: 1
          'GET:/api/v1/repositories/sync':
            bucketSize: 10
            refillSpan: 1
          'POST:/api/v1/repositories/sync':
            bucketSize: 10
            refillSpan: 1

          'GET:/api/v1/jobs':
            bucketSize: 10
            refillSpan: 1
          'POST:/api/v1/jobs':
            bucketSize: 10
            refillSpan: 1
          'DELETE:/api/v1/job/:id':
            bucketSize: 10
            refillSpan: 1

          'POST:/api/v1/commit':
            bucketSize: 30
            refillSpan: 5

          'DEFAULT':
            bucketSize: 100
            refillSpan: 1
{{- if .Values.activitypub.enabled }}
      - name: world.concrnt.ap-bridge
        host: ccactivitypub
        port: 8000
        path: /ap
        preservePath: true
        injectCors: true
      - name: world.concrnt.webfinger
        host: ccactivitypub
        port: 8000
        path: /.well-known
        preservePath: true
{{- end }}
{{- if .Values.hyperproxy.enabled }}
      - name: world.concrnt.hyperproxy.summary
        host: hyperproxy
        port: 8000
        path: /summary
        preservePath: true
      - name: world.concrnt.hyperproxy.image
        host: hyperproxy
        port: 8000
        path: /image
        preservePath: true
{{- end }}
{{- if .Values.mediaserver.enabled }}
      - name: world.concrnt.mediaserver
        host: mediaserver
        port: 8000
        path: /storage
{{- end }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: concrnt-static
data:
  tos.txt: |-
    {{ .Values.legal.tos | nindent 4 }}
  register-template.json: |-
    {{ .Values.legal.registerTemplate | nindent 4 }}
  code-of-conduct.txt: |-
    {{ .Values.legal.codeOfConduct | nindent 4 }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: activitypub-config
data:
  apconfig.yaml: |-
    apConfig:
      fqdn: {{ .Values.concrnt.fqdn }}
      proxyPriv: {{ .Values.activitypub.privatekey }}

    server:
      dsn: {{ .Values.server.dsn }}
      redisAddr: {{ .Values.server.redisAddr }}
      memcachedAddr: {{ .Values.server.memcachedAddr }}
      traceEndpoint: "grafana-agent:4318"
      enableTrace: {{ .Values.monitoring.traces.enabled }}
      repositoryPath: "/var/lib/concrnt"
      captchaSitekey: {{ .Values.server.captchaSitekey }}
      captchaSecret: {{ .Values.server.captchaSecret }}

    nodeInfo:
      openRegistration: {{ .Values.concrnt.registration }}
      metadata:
        nodeName: {{ .Values.profile.nickname }}
        nodeDescription: {{ .Values.profile.description }}
        maintainer:
          name: {{ .Values.profile.maintainerName }}
          email: {{ .Values.profile.maintainerEmail }}
        themeColor: {{ .Values.profile.themeColor | quote }}

---

{{- if .Values.monitoring.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: observability-config
data:
  agent.yaml: |-
    server:
      log_level: debug

{{- if .Values.monitoring.metrics.enabled }}
    metrics:
      configs:
        - name: default
          scrape_configs:
          - job_name: "concrnt"
            static_configs:
              - targets:
                - 'ccgateway:80'
                - 'ccapi:8000'
                - 'localhost:9187' # postgres-exporter
                - 'localhost:9121' # redis-exporter
                - 'localhost:9150' # memcached-exporter
                labels:
                  instance: {{ .Values.concrnt.fqdn | quote }}
          remote_write:
            - url: {{ .Values.monitoring.metrics.endpoint }}
              basic_auth:
                username: {{ .Values.monitoring.metrics.username }}
                password: {{ .Values.monitoring.metrics.password }}
{{- end }}
{{- if .Values.monitoring.traces.enabled }}
    traces:
      configs:
      - name: default
        receivers:
          otlp:
            protocols:
              http:
                endpoint: 0.0.0.0:4318
        remote_write:
          - endpoint: {{ .Values.monitoring.traces.endpoint }}
            basic_auth:
              username: {{ .Values.monitoring.traces.username }}
              password: {{ .Values.monitoring.traces.password }}
        batch:
          timeout: 5s
          send_batch_size: 100
{{- end }}
{{- end }}
